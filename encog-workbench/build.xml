<!-- 
 Encog Artificial Intelligence Framework v2.x
 Java Version - Workbench
 http://www.heatonresearch.com/encog/
 http://code.google.com/p/encog-java/
  
 Copyright 2008-2010, Heaton Research Inc., and individual contributors.
 See the copyright.txt in the distribution for a full listing of 
 individual contributors.
 
 This is free software; you can redistribute it and/or modify it
 under the terms of the GNU Lesser General Public License as
 published by the Free Software Foundation; either version 2.1 of
 the License, or (at your option) any later version.
 
 This software is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 Lesser General Public License for more details.
 
 You should have received a copy of the GNU Lesser General Public
 License along with this software; if not, write to the Free
 Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<project name="java-encog-workbench" default="dist" basedir=".">
	<description>
        Build the Workbench JAR file for Encog.
    </description>
	<!-- load the properties file -->
	<property file="encog.properties"/>
	<!-- set global properties for this build -->
	<property name="path.src" location="${basedir}/src" />
	<property name="path.build" location="${basedir}/build" />
	<property name="path.build.util" location="${basedir}/util" />
	<property name="path.dist" location="${basedir}/dist" />
	<property name="path.stage" location="${basedir}/stage" />
	<property name="path.jar" location="${basedir}/jar" />
	<path id="classpath">
		<fileset dir="${path.jar}" />
	</path>

	<target name="checkout" depends="init">
		
		<exec executable="svn">			
			<arg value="checkout" />
			<arg value="http://encog-java.googlecode.com/svn/trunk/encog-workbench" />
			<arg value="${basedir}" />
		</exec>
		
		<exec executable="svn">			
			<arg value="checkout" />
			<arg value="http://encog-java.googlecode.com/svn/trunk/encog-build" />
			<arg value="${path.build.util}" />
		</exec>
		
		<!-- load the properties file -->
		<property file="encog.properties"/>
	</target>

	<target name="init">
		<!-- Create the build directory structure used by compile -->
		<mkdir dir="${path.build}" />		
		
	</target>

	<target name="compile" depends="init" description="compile the source ">
	
		<javac srcdir="${path.src}" source="1.5" target="1.5" destdir="${path.build}">
			<classpath refid="classpath" />
		</javac>

	</target>

	<target name="dist" depends="compile" description="generate the distribution">

		<!-- Create the distribution directory -->
		<mkdir dir="${path.dist}" />		

		<manifest file="MANIFEST.MF">
			<attribute name="Built-By" value="${user.name}" />
			<attribute name="Implementation-Version" value="${version.num}-b${encog.version}" />
		</manifest>

		<property name="jarfile" location="${path.jar}/encog-workbench-${encog.version}.jar" />
		
		<copy todir="${path.build}/resource">
			<fileset dir="${path.src}/resource" />
		</copy>

		<jar jarfile="${jarfile}" basedir="${path.build}" manifest="MANIFEST.MF" />

	</target>

	<target name="cc-build" depends="clean-all,checkout,compile,dist">
	
		<mkdir dir="${path.stage}" />
		<property name="path.stage.sub" value="${path.stage}/encog-workbench-${encog.version}"/>
		<property name="path.stage.src.sub" value="${path.stage.sub}/src"/>
		
		<tstamp/>

		<!-- Create Windows distributable -->		
		<copy todir="${path.stage.sub}/jar">
			<fileset dir="${path.jar}" />
		</copy>
		<copy todir="${path.stage.sub}" file="${basedir}/copyright.txt" />
		
		<java classname="org.encog.workbench.util.JavaClassPathUtil">
			<classpath refid="classpath" />
			<arg value="${path.stage.sub}"/>
		</java>
		
		<java classname="org.encog.workbench.util.JavaLaunchUtil">
			<classpath refid="classpath" />
			<arg value="${path.stage.sub}"/>
			<arg value="${path.build.util}"/>
		</java>
		
		<exec executable="launch4jc" dir="${path.build.util}">			
			<arg value="launch.xml" />
		</exec>
		
		<!-- Create Source distributable -->
		<copy todir="${path.stage.src.sub}" file="${basedir}/build.xml" />
		<copy todir="${path.stage.src.sub}" file="${basedir}/encog.properties" />
		<copy todir="${path.stage.src.sub}" file="${basedir}/.classpath" />
		<copy todir="${path.stage.src.sub}" file="${basedir}/.project" />
		<copy todir="${path.stage.src.sub}" file="${basedir}/copyright.txt" />

		<copy todir="${path.stage.src.sub}/src">
			<fileset dir="${path.src}" />
		</copy>
		
		<copy todir="${path.stage.src.sub}/jar">
			<fileset dir="${path.jar}" />
		</copy>

		<!-- Zip it all up -->
		<zip destfile="${path.dist}/encog-workbench-win-${encog.version}-${DSTAMP}-${TSTAMP}.zip">
			<fileset dir="${path.stage}" />
		</zip>
		
				

	</target>

	<target name="clean-all" depends="clean" description="Delete the source code">
		<delete dir="${path.src}" />
		<delete>
			<fileset dir="${basedir}" excludes="build.xml" />
		</delete>
	</target>

	<target name="clean" description="clean up">
		<!-- Delete the ${build} and ${dist} directory trees -->
		<delete dir="${path.stage}" />
		<delete dir="${path.jar}" />
		<delete dir="${path.build}" />
		<delete dir="${path.build.util}" />
		<delete dir="${path.dist}" />
		<delete dir="${basedir}/samples" />
	</target>
</project>